# Stop and remove any existing container
- name: Stop the running flaskapp container (if exists)
  community.docker.docker_container:
    name: flaskapp-container
    state: stopped
  ignore_errors: yes

- name: Remove the stopped flaskapp container
  community.docker.docker_container:
    name: flaskapp-container
    state: absent
  ignore_errors: yes

# Create the app directory on remote
- name: Create app directory on remote
  file:
    path: /opt/myapp
    state: directory
    mode: '0755'

# Copy app.py to the remote app directory
- name: Copy app.py to the remote app directory
  copy:
    src: ../../app/app.py
    dest: /opt/myapp/app.py

# Copy Dockerfile to the remote app directory
- name: Copy Dockerfile to the remote app directory
  copy:
    src: ../../Dockerfile
    dest: /opt/myapp/Dockerfile

- name: Delete the old Docker image if it exists
  community.docker.docker_image:
    name: flaskapp
    tag: latest
    state: absent

# Build the Docker image on remote
- name: Build Docker image on remote
  community.docker.docker_image:
    name: flaskapp
    tag: latest
    state: present
    source: build
    build:
      path: /opt/myapp
      dockerfile: /opt/myapp/Dockerfile
      nocache: true

# Run a new Docker container from the flaskapp image
- name: Run new Docker container from flaskapp image
  community.docker.docker_container:
    name: flaskapp-container
    image: flaskapp:latest
    state: started
    restart_policy: always
    published_ports:
      - "5000:5000"

